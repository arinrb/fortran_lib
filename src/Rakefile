require 'tempfile'
require 'yaml'

CONFIG = YAML.load_file(File.join(ENV['HOME'], '.config', 'command', 'config.yaml'))

ERB = [:erb, :erb_option_default].map{|k| CONFIG[k]}.join(' ')
CPP = [:cpp, :cpp_option_default].map{|k| CONFIG[k]}.join(' ')
GFORTRAN = [:gfortran, :gfortran_option_default].map{|k| CONFIG[k]}.join(' ')

ERBED_F90_FILES = FileList['*.f90.erb'].ext('')
TEST_FILES = FileList['*_test.f90', '*_test.f90.erb'].sub(/\.f90(?:\.erb)?\z/, '.exe')

desc "Compile erb files."
task erb: ERBED_F90_FILES

rule '.f90' => '.f90.erb' do |t|
  begin
    tempfile = Tempfile.new(['fortran_lib', '.f90']).path
    sh "#{ERB} #{t.source} > #{t.name}"
    sh "#{CPP} #{t.name} > #{tempfile}"
    mv tempfile, t.name
  rescue
    mv t.name, tempfile
  end
end

%w[.o .mod].each{|ext|
  rule ext => '.f90' do |t|
    sh "#{GFORTRAN} -c #{t.source}"
  end
}

# `sh' is too verbose for automatic test.
def run_test(t)
  tempfile = Tempfile.new(['fortran_lib', '.f90']).path
  system <<-EOS
#{CPP} #{t.prerequisites.last} > #{tempfile}\
&& #{GFORTRAN} -o #{t.name} #{(t.prerequisites[0..-2] + [tempfile]).join(' ')}\
&& ./#{t.name}
  EOS
end

task test: TEST_FILES
{
  "lib_comparable_test.exe" => %w[ lib_comparable.o lib_comparable_test.f90],
}.each{|target, dependencies|
  file target => dependencies do |t|
    run_test(t)
  end
}
